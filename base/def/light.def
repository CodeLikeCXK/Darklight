entityDef light {
	"editor_color"				"0 1 0"
	"editor_mins"				"-8 -8 -8"
	"editor_maxs"				"8 8 8"
	"editor_rotatable"			"1"

	"editor_usage"				"Light source.  If health is set, light becomes breakable and turns off when shot."
	
	"editor_material texture"		"light shader to use."
	"editor_color color"			"light color"
	"editor_var shaderParm3"	"shaderParm 3"
	"editor_var shaderParm4"	"shaderParm 4"
	"editor_var shaderParm5"	"shaderParm 5"
	"editor_var shaderParm6"	"shaderParm 6"
	"editor_var shaderParm7"	"shaderParm 7"
	"editor_var count"			"how many times light must be triggered to toggle."
	"editor_var break"			"break when triggered."
	"editor_model model"			"model to use."
	"editor_model broken"			"model to use when the light is broken (defaults to model name with '_broken' appended to name)"
	"editor_var hideModelOnBreak" "hides the model when broken"
	"editor_var health"			"amount of damage to recieve before becoming broken.  0 is nonbreakable."
	"editor_var target"			"entities to trigger if shot."
	"editor_var levels"			"the number of times a light must be triggered until it turns off.  Each time it's triggered, it's dimmed to a lower level."
	"editor_var start_off"		"causes the light to be off when the level starts."
	"editor_var snd_broken"		"sound shader to use when broken"
	"editor_var mtr_broken"		"material to use when broken"
	"editor_color color_demonic"	"demonic color to use if in demonic mode."
	"editor_material mat_demonic"	"demonic shader to use if in demonic mode."
	"editor_var leave_demonic_mat" "leaves the demonic shader when the effect expires.. color is still reverted back."

	"spawnclass"				"idLight"
	"health"					"0"
	"levels"					"1"
	"start_off"					"0"
	"count"						"1"
	"break"						"0"
}
